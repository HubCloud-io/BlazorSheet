@using HubCloud.BlazorSheet.Core.Enums
@using HubCloud.BlazorSheet.Core.Enums
@using HubCloud.BlazorSheet.Editors
@using BBComponents.Enums
@using BBComponents.Components

<div style="@EditorStyle">

    @if (CellEditInfo.EditSettings != null)
    {
         @switch (CellEditInfo.EditSettings.ControlKind)
    {
        case CellControlKinds.NumberInput:

            <BbNumberInput TValue="decimal"
                           HtmlStyle="width:100%; text-align:right;"
                           IsDisabled="IsDisabled"
                           Digits="@CellEditInfo.EditSettings.NumberDigits"
                           @bind-Value="@CellEditInfo.Cell.DecimalValue"
                           Changed="@OnChanged">
            </BbNumberInput>
            break;

        case CellControlKinds.TextInput:

            <BbTextInput HtmlStyle="width:100%"
                         @bind-Value="@CellEditInfo.Cell.StringValue"
                         Changed="@OnChanged">
            </BbTextInput>
            break;

        case CellControlKinds.DateInput:

            <DateEditor @bind-Value="@CellEditInfo.Cell.DateTimeValue"
                        IsDisabled="@IsDisabled"
                        Changed="@OnChanged">
            </DateEditor>

            break;

        case CellControlKinds.DateTimeInput:

            <DateEditor @bind-Value="@CellEditInfo.Cell.DateTimeValue"
                        IsDisabled="@IsDisabled"
                        Changed="@OnChanged">
            </DateEditor>
            break;

        case CellControlKinds.CheckBox:

            <BbCheckBox @bind-Value="@CellEditInfo.Cell.BoolValue"
                        IsDisabled="IsDisabled"
                        Changed="@OnChanged">
            </BbCheckBox>

            break;

        @* case CellControlKinds.ComboBox: *@
        @* *@
        @*     @if (ComboBoxDataProvider != null) *@
        @*     { *@
        @*         <BbComboBox TValue="int" *@
        @*                     DataProvider="@ComboBoxDataProvider" *@
        @*                     DropdownPosition="DropdownPositions.Fixed" *@
        @*                     DropdownWidth="@DropdownWidth" *@
        @*                     DataRegime="ComboBoxDataRegimes.Server" *@
        @*                     Size="BootstrapElementSizes.Sm" *@
        @*                     IsDisabled="IsDisabled" *@
        @*                     ValueName="Value" *@
        @*                     TextName="Text" *@
        @*                     @bind-Value="@Cell.IntValue" *@
        @*                     Changed="OnChanged"> *@
        @*         </BbComboBox> *@
        @*     } *@
        @*     else *@
        @*     { *@
        @*         <span style="color:red;">Combobox data provider is not defined</span> *@
        @*     } *@
        @* *@
        @*     break; *@
        @* *@
        @* case CellControlKinds.Select: *@
        @* *@
        @*     @if (ComboBoxDataProvider != null) *@
        @*     { *@
        @*         <SelectEditor DataProvider="ComboBoxDataProvider"  *@
        @*                       IsDisabled="@IsDisabled"  *@
        @*                       @bind-Value="@Cell.IntValue"  *@
        @*                       Changed="OnChanged"></SelectEditor> *@
        @*     } *@
        @*     else *@
        @*     { *@
        @*         <span style="color:red;">Combobox data provider is not defined</span> *@
        @*     } *@
        @* *@
        @* *@
        @*     break; *@

        default:

            <span style="color:red;">Unknown control</span>
            break;
    }
    }

</div>