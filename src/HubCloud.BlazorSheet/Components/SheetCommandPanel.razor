@using BBComponents.Components
@using HubCloud.BlazorSheet.Core.Consts;
@using HubCloud.BlazorSheet.Core.Enums

<div class="hc-sheet-command-panel">
    <div class="row">
        <div class="col-sm-12">
            <nav class="navbar navbar-expand-lg navbar-primary bg-light">
                <div class="container-fluid">
                    <ul class="nav navbar-nav">
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" @onclick:preventDefault role="button" data-toggle="dropdown" aria-expanded="false">
                                Закрепить
                            </a>
                            <div class="dropdown-menu">
                                <a class="dropdown-item" href="#" @onclick:preventDefault @onclick="() => OnSetFreezedRows(0)">Не закреплять строки</a>
                                <a class="dropdown-item" href="#" @onclick:preventDefault @onclick="() => OnSetFreezedRows(1)">1 строку</a>
                                <a class="dropdown-item @(SelectedCellRowNumber == 0 ? "disabled" : "")"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetFreezedRows(SelectedCellRowNumber)">
                                    До строки @(SelectedCellRowNumber == 0 ? "..." : SelectedCellRowNumber)
                                </a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" href="#" @onclick:preventDefault @onclick="() => OnSetFreezedColumns(0)">Не закреплять столбцы</a>
                                <a class="dropdown-item" href="#" @onclick:preventDefault @onclick="() => OnSetFreezedColumns(1)">1 столбец</a>
                                <a class="dropdown-item @(SelectedCellColumnNumber == 0 ? "disabled" : "")"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetFreezedColumns(SelectedCellColumnNumber)">
                                    До столбца @(SelectedCellColumnNumber == 0 ? "..." : SelectedCellColumnNumber)
                                </a>
                            </div>
                        </li>
                        <li class="nav-item" title="Размер шрифта">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div style="height:100%;display:table;">
                                        <span class="fa fa-solid fa-text-height text-primary input-group-text"
                                              style="display:table-cell;vertical-align:middle">
                                        </span>
                                    </div>
                                </div>
                                <BbNumberInput TValue="int"
                                @bind-Value="@Model.FontSize"
                                               Changed="OnSettingsChanged"
                                               HtmlClass="form-control"
                                               HtmlStyle="width:50px;text-align:right;">
                                </BbNumberInput>
                            </div>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" @onclick:preventDefault role="button" data-toggle="dropdown" aria-expanded="false" title="Выравнивание по горизонтали">
                                <span class="fa fa-align-@_currentTextAlign text-primary"></span>
                            </a>
                            <div class="dropdown-menu">
                                <a class="dropdown-item @GetActiveTextAlign(TextAlignLeft)"
                                   href="#" @onclick:preventDefault @onclick="() => OnTextAlignChanged(TextAlignLeft)" title="По левому краю">
                                    <span class="fa fa-align-left"></span>
                                </a>
                                <a class="dropdown-item @GetActiveTextAlign(TextAlignJustify)"
                                   href="#" @onclick:preventDefault @onclick="() => OnTextAlignChanged(TextAlignJustify)" title="По центру">
                                    <span class="fa fa-align-justify"></span>
                                </a>
                                <a class="dropdown-item @GetActiveTextAlign(TextAlignRight)"
                                   href="#" @onclick:preventDefault @onclick="() => OnTextAlignChanged(TextAlignRight)" title="По правому краю">
                                    <span class="fa fa-align-right"></span>
                                </a>
                            </div>
                        </li>
                        <li class="nav-item">
                            <button class="@ToggleButtonStyle(Model.IsBold) navbar-btn" title="Полужирный" @onclick="OnBoldClick">
                                <span class="fa fa-solid fa-bold"></span>
                            </button>
                            <button class="@ToggleButtonStyle(Model.IsItalic) navbar-btn" title="Курсив" @onclick="OnItalicClick">
                                <span class="fa fa-solid fa-italic"></span>
                            </button>
                        </li>
                        <li class="nav-item" title="Цвет текста">
                            <div class="input-group" style="padding-left:0.5rem;height:100%;">
                                <div class="input-group-prepend" style="height:100%;">
                                    <div style="height:inherit;display:table;">
                                        <span class="fa fa-tint text-primary input-group-text"
                                              style="display:table-cell;vertical-align:middle">
                                        </span>
                                    </div>
                                </div>
                                <input type="color" @onchange="(e => OnColorChange(e))"
                                       value="@Model.Color"
                                       class="form-control p-1"
                                       style="width:50px;height:auto;" />
                            </div>
                        </li>
                        <li class="nav-item" title="Цвет заливки">
                            <div class="input-group" style="padding-left:0.5rem;height:100%;">
                                <div class="input-group-prepend" style="height:100%;">
                                    <div style="height:inherit;display:table;">
                                        <span class="fa fa-solid fa-fill text-primary input-group-text"
                                              style="display:table-cell;vertical-align:middle">
                                        </span>
                                    </div>
                                </div>
                                <input type="color" @onchange="(e => OnBackgroundColorChange(e))"
                                       value="@Model.BackgroundColor"
                                       class="form-control p-1"
                                       style="width:50px;height:auto;" />
                            </div>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" @onclick:preventDefault role="button" data-toggle="dropdown" aria-expanded="false">
                                Границы
                            </a>
                            <div class="dropdown-menu">
                                <a class="dropdown-item @GetActiveBorderType(CellBorderTypes.None)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetBorder(CellBorderTypes.None)">
                                    Убрать границы
                                </a>
                                <a class="dropdown-item @GetActiveBorderType(CellBorderTypes.Top)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetBorder(CellBorderTypes.Top)">
                                    Верхняя граница
                                </a>
                                <a class="dropdown-item @GetActiveBorderType(CellBorderTypes.Left)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetBorder(CellBorderTypes.Left)">
                                    Левая граница
                                </a>
                                <a class="dropdown-item @GetActiveBorderType(CellBorderTypes.Bottom)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetBorder(CellBorderTypes.Bottom)">
                                    Нижняя граница
                                </a>
                                <a class="dropdown-item @GetActiveBorderType(CellBorderTypes.Right)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetBorder(CellBorderTypes.Right)">
                                    Правая граница
                                </a>
                                <a class="dropdown-item @GetActiveBorderType(CellBorderTypes.All)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetBorder(CellBorderTypes.All)">
                                    Все границы
                                </a>
                            </div>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" @onclick:preventDefault role="button" data-toggle="dropdown" aria-expanded="false">
                                Толщина границ
                            </a>
                            <div class="dropdown-menu">
                                <a class="dropdown-item @GetActiveBorderWidth(1)" href="#" @onclick:preventDefault @onclick="() => OnSetBorderWidth(1)">1px</a>
                                <a class="dropdown-item @GetActiveBorderWidth(3)" href="#" @onclick:preventDefault @onclick="() => OnSetBorderWidth(3)">3px</a>
                                <a class="dropdown-item @GetActiveBorderWidth(5)" href="#" @onclick:preventDefault @onclick="() => OnSetBorderWidth(5)">5px</a>
                            </div>
                        </li>
                        <li class="nav-item" title="Цвет границ">
                            <div class="input-group" style="padding-left:0.5rem;height:100%;">
                                <div class="input-group-prepend" style="height:100%;">
                                    <div style="height:inherit;display:table;">
                                        <span class="fa fa-solid fa-border-all text-primary input-group-text"
                                              style="display:table-cell;vertical-align:middle">
                                        </span>
                                    </div>
                                </div>
                                <input type="color" @onchange="(e => OnBorderColorChange(e))"
                                       value="@Model.BorderColor"
                                       class="form-control p-1"
                                       style="width:50px;height:auto;" />
                            </div>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" @onclick:preventDefault role="button" data-toggle="dropdown" aria-expanded="false">
                                Формат
                            </a>
                            <div class="dropdown-menu">
                                <a class="dropdown-item @GetActiveFormat(CellFormatTypes.None)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetFormat(CellFormatTypes.None)">
                                    No format
                                </a>
                                <a class="dropdown-item @GetActiveFormat(CellFormatTypes.Integer)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetFormat(CellFormatTypes.Integer)">
                                    Number: @CellDisplayFormatConsts.Integer
                                </a>
                                <a class="dropdown-item @GetActiveFormat(CellFormatTypes.IntegerTwoDecimalPlaces)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetFormat(CellFormatTypes.IntegerTwoDecimalPlaces)">
                                    Number: @CellDisplayFormatConsts.IntegerTwoDecimalPlaces
                                </a>
                                <a class="dropdown-item @GetActiveFormat(CellFormatTypes.IntegerThreeDecimalPlaces)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetFormat(CellFormatTypes.IntegerThreeDecimalPlaces)">
                                    Number: @CellDisplayFormatConsts.IntegerThreeDecimalPlaces
                                </a>
                                <a class="dropdown-item @GetActiveFormat(CellFormatTypes.IntegerWithSpaces)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetFormat(CellFormatTypes.IntegerWithSpaces)">
                                    Number: @CellDisplayFormatConsts.IntegerWithSpaces
                                </a>
                                <a class="dropdown-item @GetActiveFormat(CellFormatTypes.IntegerWithSpacesTwoDecimalPlaces)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetFormat(CellFormatTypes.IntegerWithSpacesTwoDecimalPlaces)">
                                    Number: @CellDisplayFormatConsts.IntegerWithSpacesTwoDecimalPlaces
                                </a>
                                <a class="dropdown-item @GetActiveFormat(CellFormatTypes.IntegerWithSpacesThreeDecimalPlaces)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetFormat(CellFormatTypes.IntegerWithSpacesThreeDecimalPlaces)">
                                    Number: @CellDisplayFormatConsts.IntegerWithSpacesThreeDecimalPlaces
                                </a>
                                <a class="dropdown-item @GetActiveFormat(CellFormatTypes.IntegerNegativeWithSpaces)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetFormat(CellFormatTypes.IntegerNegativeWithSpaces)">
                                    Number: @CellDisplayFormatConsts.IntegerNegativeWithSpaces
                                </a>
                                <a class="dropdown-item @GetActiveFormat(CellFormatTypes.IntegerNegativeWithSpacesTwoDecimalPlaces)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetFormat(CellFormatTypes.IntegerNegativeWithSpacesTwoDecimalPlaces)">
                                    Number: @CellDisplayFormatConsts.IntegerNegativeWithSpacesTwoDecimalPlaces
                                </a>
                                <a class="dropdown-item @GetActiveFormat(CellFormatTypes.IntegerNegativeWithSpacesThreeDecimalPlaces)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetFormat(CellFormatTypes.IntegerNegativeWithSpacesThreeDecimalPlaces)">
                                    Number: @CellDisplayFormatConsts.IntegerNegativeWithSpacesThreeDecimalPlaces
                                </a>
                                <a class="dropdown-item @GetActiveFormat(CellFormatTypes.Date)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetFormat(CellFormatTypes.Date)">
                                    Date: @CellDisplayFormatConsts.Date
                                </a>
                                <a class="dropdown-item @GetActiveFormat(CellFormatTypes.DateTime)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetFormat(CellFormatTypes.DateTime)">
                                    Date&Time: @CellDisplayFormatConsts.DateTime
                                </a>
                                <a class="dropdown-item @GetActiveFormat(CellFormatTypes.Custom)"
                                   href="#" @onclick:preventDefault @onclick="() => OnSetFormat(CellFormatTypes.Custom)">
                                    Custom
                                </a>
                            </div>
                        </li>
                        @if (Model.FormatType == CellFormatTypes.Custom)
                        {
                            <li class="nav-item" title="Произвольный формат">
                                <div style="padding-right:0.5rem;">
                                    <BbTextInput @bind-Value="@Model.CustomFormat" Changed="OnCustomFormatInputChanged" HtmlClass="form-control" HtmlStyle="width:150px;" />
                                </div>
                            </li>
                        }
                        <li class="nav-item">
                            <button class="btn btn-outline-primary navbar-btn" @onclick="(e => OnEditSettingsClick(e))">
                                <span class="fa fa-edit"></span>
                                <span>Edit settings</span>
                            </button>
                        </li>
                        <li class="nav-item">
                            <div style="padding-left:0.5rem;">
                                <button title="Excel export" class="btn btn-outline-success navbar-btn" @onclick="OnExport">
                                    <span class="fa fa-file-export"></span>
                                </button>
                                <button title="Excel import" class="btn btn-outline-success navbar-btn" @onclick="OnImport">
                                    <span class="fa fa-file-import"></span>
                                </button>
                            </div>
                        </li>
                        <li class="nav-item">
                            <div style="padding-left:0.5rem;">
                                <button class="btn btn-outline-primary navbar-btn" @onclick="OnOpenCellLinkModal">
                                    <span class="fa fa-solid fa-link"></span>
                                </button>
                            </div>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" @onclick:preventDefault role="button" data-toggle="dropdown" aria-expanded="false">
                                Actions
                            </a>
                            <div class="dropdown-menu">
                                <a class="dropdown-item @(IsButtonSplitJoinDisabled() ? "disabled" : "")"
                                   href="#" @onclick:preventDefault @onclick="OnSplitJoinCells">
                                    @GetSplitJoinItemLabel()
                                </a>
                                <a class="dropdown-item @(!CanRowsBeGrouped ? "disabled" : "")"
                                   href="#" @onclick:preventDefault @onclick="OnGroupRows">
                                    Group rows
                                </a>
                                <a class="dropdown-item @(!CanRowsBeUngrouped ? "disabled" : "")"
                                   href="#" @onclick:preventDefault @onclick="OnUngroupRows">
                                    Ungroup rows
                                </a>
                                <a class="dropdown-item"
                                   href="#" @onclick:preventDefault @onclick="OnUngroupAllRows">
                                    Ungroup all rows
                                </a>
                                <a class="dropdown-item"
                                   href="#" @onclick:preventDefault @onclick="OnCollapseExpandAllRows">
                                    Collapse/Expand all rows
                                </a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item @(!CanColumnsBeGrouped ? "disabled" : "")"
                                   href="#" @onclick:preventDefault @onclick="OnGroupColumns">
                                    Group columns
                                </a>
                                <a class="dropdown-item @(!CanColumnsBeUngrouped ? "disabled" : "")"
                                   href="#" @onclick:preventDefault @onclick="OnUngroupColumns">
                                    Ungroup columns
                                </a>
                                <a class="dropdown-item"
                                   href="#" @onclick:preventDefault @onclick="OnUngroupAllColumns">
                                    Ungroup all columns
                                </a>
                                <a class="dropdown-item"
                                   href="#" @onclick:preventDefault @onclick="OnCollapseExpandAllColumns">
                                    Collapse/Expand all columns
                                </a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item @(SelectedCellsCount != 1 ? "disabled" : "")"
                                   href="#" @onclick:preventDefault @onclick="async () => await RememberCellSettings.InvokeAsync()">
                                    Remember cell settings
                                </a>
                                <a class="dropdown-item @(SelectedCellsCount == 0 ? "disabled" : "")"
                                   href="#" @onclick:preventDefault @onclick="async () => await ApplyRememberedCellSettings.InvokeAsync()">
                                    Apply remembered cell settings
                                </a>
                            </div>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>

    <div class="row" style="margin-top:5px;">
        <div class="col-sm-1">
            <span class="text-primary" style="line-height: 30px;">
                @(string.IsNullOrWhiteSpace(Model.SelectedCellAddress) ? "RC" : @Model.SelectedCellAddress)
            </span>
        </div>
        <div class="col-sm-11">
            <BbTextInput HtmlStyle="width:100%"
                         HtmlClass="form-control"
            @bind-Value="@Model.InputText"
                         Placeholder="Formula"
                         Changed="OnFormulaChanged">
            </BbTextInput>
        </div>
    </div>
</div>

@if (_isEditSettingsOpen)
{
    <EditParametersModal ClientX="@_clientX"
                         ClientY="@_clientY"
                         EditSettings="@Model.EditSettings"
                         DataTypeDataProvider="@DataTypeDataProvider"
                         Closed="OnEditParametersClosed" />
}