@using HubCloud.BlazorSheet.Core.Enums
@using HubCloud.BlazorSheet.Components
@using HubCloud.BlazorSheet.Core.Models
@using HubCloud.BlazorSheet.Editors
@using BBComponents.Components
@using BBComponents.Enums
@using Microsoft.AspNetCore.Components.Web.Virtualization

<div class="hc-sheet-container" style="overflow-y: auto; overflow-x: auto; max-height: @MaxHeight; max-width:@MaxWidth">

    <table id="@TableId"
           class="hc-sheet"
           tabindex="0">

        @*Sheet rows*@
        <tr>
            <td class="hc-grid-cell" style="@TopLeftEmptyCellStyle()"></td>

            @foreach (var column in Sheet.GetVisibleColumns(_isHiddenCellsVisible))
            {
                <SheetColumnHeaderCellComponent Column="column"
                                                Sheet="Sheet"
                                                CellStyleBuilder="@_cellStyleBuilder"
                                                IsHiddenCellsVisible="@_isHiddenCellsVisible"
                                                Click="() => OnColumnNumberCellClick(column)"
                                                ColumnContextMenu="(e) => OnColumnContextMenu(e, column)"/>
            }

        </tr>

        @*Sheet body*@
        @foreach (var row in Sheet.GetFreezedVisibleRows(_isHiddenCellsVisible))
        {
            <tr @key="@row.Uid">
                <SheetRowHeaderCellComponent Row="row"
                                             Sheet="Sheet"
                                             IsHiddenCellsVisible="@_isHiddenCellsVisible"
                                             CellStyleBuilder="@_cellStyleBuilder"
                                             RowContextMenu="e => OnRowContextMenu(e, row)"/>

                @foreach (var column in Sheet.Columns)
                {
                    var cell = Sheet.GetCell(row, column);
                    if (cell == null)
                        continue;

                    if (ShouldCellBeNotDisplayed(column, row, cell))
                        continue;

                    <td @key="@cell.Uid"
                        class="hc-sheet-cell"
                        style="@CellStyle(row, column, cell)"
                        colspan="@cell.Colspan"
                        rowspan="@cell.Rowspan">

                        @if (cell.HasLink)
                        {
                            <a href="@cell.Link" target="_blank">@cell.StringValue</a>
                        }
                        else
                        {
                            if (cell.Indent > 0)
                            {
                                <span>@GetHtmlSpacing(cell.Indent)</span>
                                <span>@cell.Text</span>
                            }
                            else
                            {
                                @cell.Text
                            }
                        }

                    </td>
                }
            </tr>
        }

        @if (IsVirtualizationEnabled)
        {
            <Virtualize Items="@Sheet.GetVisibleRows(_isHiddenCellsVisible)"
                        TItem="SheetRow"
                        Context="row"
                        OverscanCount="1"
                        ItemSize="26">
                <ItemContent>

                    <tr @key="@row.Uid">
                        <SheetRowHeaderCellComponent Row="row"
                                                     Sheet="Sheet"
                                                     IsHiddenCellsVisible="@_isHiddenCellsVisible"
                                                     CellStyleBuilder="@_cellStyleBuilder"
                                                     Click="() => OnRowNumberCellClick(row)"
                                                     RowContextMenu="e => OnRowContextMenu(e, row)"/>

                        @foreach (var column in Sheet.Columns)
                        {
                            var cell = Sheet.GetCell(row, column);
                            if (cell == null)
                                continue;

                            if (ShouldCellBeNotDisplayed(column, row, cell))
                                continue;

                            <td @key="@cell.Uid"
                                class="hc-sheet-cell"
                                style="@CellStyle(row, column, cell)"
                                colspan="@cell.Colspan"
                                rowspan="@cell.Rowspan">

                                @if (cell.HasLink)
                                {
                                    <a href="@cell.Link" target="_blank">@cell.StringValue</a>
                                }
                                else
                                {
                                    if (cell.Indent > 0)
                                    {
                                        <span>@GetHtmlSpacing(cell.Indent)</span>
                                        <span>@cell.Text</span>
                                    }
                                    else
                                    {
                                        @cell.Text
                                    }
                                }

                            </td>
                        }
                    </tr>

                </ItemContent>
            </Virtualize>
        }
        else
        {
            foreach (var row in Sheet.GetVisibleRows(_isHiddenCellsVisible))
            {
                <tr @key="@row.Uid">
                    <SheetRowHeaderCellComponent Row="row"
                                                 Sheet="Sheet"
                                                 IsHiddenCellsVisible="@_isHiddenCellsVisible"
                                                 CellStyleBuilder="@_cellStyleBuilder"
                                                 Click="() => OnRowNumberCellClick(row)"
                                                 RowContextMenu="e => OnRowContextMenu(e, row)"/>

                    @foreach (var column in Sheet.Columns)
                    {
                        var cell = Sheet.GetCell(row, column);
                        if (cell == null)
                            continue;

                        if (ShouldCellBeNotDisplayed(column, row, cell))
                            continue;


                        <td @key="@cell.Uid"
                            class="hc-sheet-cell"
                            style="@CellStyle(row, column, cell)"
                            colspan="@cell.Colspan"
                            rowspan="@cell.Rowspan">

                            @if (cell.HasLink)
                            {
                                <a href="@cell.Link" target="_blank">@cell.StringValue</a>
                            }
                            else
                            {
                                if (cell.Indent > 0)
                                {
                                    <span>@GetHtmlSpacing(cell.Indent)</span>
                                    <span>@cell.Text</span>
                                }
                                else
                                {
                                    @cell.Text
                                }
                            }

                        </td>
                    }
                </tr>
            }
        }

    </table>

</div>