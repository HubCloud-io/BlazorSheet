@using HubCloud.BlazorSheet.Core.Enums
@using HubCloud.BlazorSheet.Editors
@using BBComponents.Enums
@using BBComponents.Components

@if (EditSettings != null)
{
    @switch (EditSettings.ControlKind)
    {
        case CellControlKinds.NumberInput:

            <BbNumberInput TValue="decimal"
                           HtmlStyle="width:100%; text-align:right;"
                           IsDisabled="IsDisabled"
                           Digits="@EditSettings.NumberDigits"
                           @bind-Value="@Cell.DecimalValue"
                           Changed="@OnChanged">
            </BbNumberInput>
            break;

        case CellControlKinds.TextInput:

            <BbTextInput HtmlStyle="width:100%"
                         @bind-Value="@Cell.StringValue"
                         Changed="@OnChanged">
            </BbTextInput>
            break;

        case CellControlKinds.DateInput:

            <DateEditor @bind-Value="@Cell.DateTimeValue"
                        IsDisabled="@IsDisabled"
                        Changed="@OnChanged">
            </DateEditor>

            break;

        case CellControlKinds.DateTimeInput:

            <DateEditor @bind-Value="@Cell.DateTimeValue"
                        IsDisabled="@IsDisabled"
                        Changed="@OnChanged">
            </DateEditor>
            break;

        case CellControlKinds.CheckBox:

            <BbCheckBox @bind-Value="@Cell.BoolValue"
                        IsDisabled="IsDisabled"
                        Changed="@OnChanged">
            </BbCheckBox>

            break;

        case CellControlKinds.ComboBox:

            @if (ComboBoxDataProvider != null)
            {
                <BbComboBox TValue="int"
                            DataProvider="@ComboBoxDataProvider"
                            DropdownPosition="DropdownPositions.Fixed"
                            DropdownWidth="@DropdownWidth"
                            DataRegime="ComboBoxDataRegimes.Server"
                            Size="BootstrapElementSizes.Sm"
                            IsDisabled="IsDisabled"
                            ValueName="Value"
                            TextName="Text"
                            @bind-Value="@Cell.IntValue"
                            Changed="OnChanged">
                </BbComboBox>
            }
            else
            {
                <span style="color:red;">Combobox data provider is not defined</span>
            }

            break;

        case CellControlKinds.Select:
        
            @if (ComboBoxDataProvider != null)
            {
                <SelectEditor DataProvider="ComboBoxDataProvider" 
                              IsDisabled="@IsDisabled" 
                              @bind-Value="@Cell.IntValue" 
                              Changed="OnChanged"></SelectEditor>
            }
            else
            {
                <span style="color:red;">Combobox data provider is not defined</span>
            }
        
        
            break;

        default:

            <span style="color:red;">Unknown control</span>
            break;
    }
}