@using HubCloud.BlazorSheet.Core.Enums
@using HubCloud.BlazorSheet.Components
@using BBComponents.Components
@using BBComponents.Enums

<div style="overflow-y: auto; overflow-x: auto; max-height: @MaxHeight;">

    <table class="hc-sheet"
           @onkeydown="(e=>OnTableKeyDown(e))" 
           @onkeyup="(e=>OnTableKeyUp(e))">

        @*Sheet rows*@
        <tr>

            <td class="hc-grid-cell" style="width: 30px;"></td>

            @foreach (var column in Sheet.Columns)
            {
                @if (column.Hidden)
                {
                    continue;
                }

                <td class="hc-grid-cell text-center"
                    @oncontextmenu="(e => OnColumnContextMenu(e, column))"
                    @oncontextmenu:preventDefault
                    style="width:@column.Width; max-width: @column.Width;">
                    @Sheet.ColumnNumber(column)
                </td>
            }

        </tr>

        @*Sheet body*@
        @foreach (var row in Sheet.Rows)
        {
            <tr>
                <td class="hc-grid-cell"
                    @oncontextmenu="(e => OnRowContextMenu(e, row))"
                    @oncontextmenu:preventDefault>
                    <span>@(Sheet.RowNumber(row))</span>
                </td>
                @foreach (var column in Sheet.Columns)
                {
                    var cell = Sheet.GetCell(row, column);
                    if (cell == null)
                    {
                        continue;
                    }

                    @if (Regime == SheetRegimes.Edit)
                    {
                        <td class="@CellClass(cell)"
                            contenteditable="true"
                            style="@CellStyle(Sheet, row, column, cell)"
                            @oninput="(e => OnInput(e, cell))"
                            @onclick="(e=>OnCellClick(row, column, cell))"
                            @onfocusout="(e => OnCellFocusOut(e, cell))">
                            @cell.Text
                        </td>
                    }
                    else
                    {
                        <td class="@CellClass(cell)" style="@CellStyle(Sheet, row, column, cell)">
                            @if (cell.EditSettingsUid.HasValue)
                            {
                                var editSettings = Sheet.GetEditSettings(cell);
                                if (editSettings.ControlKind == CellControlKinds.NumberInput)
                                {
                                    <BbNumberInput TValue="decimal"
                                                   HtmlStyle="width:100%; text-align:right;"
                                                   Digits="@editSettings.NumberDigits"
                                                   @bind-Value="@cell.DecimalValue" 
                                                   Changed="(e=>OnCellValueChanged(cell))"></BbNumberInput>
                                }
                                else if (editSettings.ControlKind == CellControlKinds.DateInput)
                                {
                                    <BbDatePicker @bind-Value="@cell.DateTimeValue"
                                                  DropdownPosition="DropdownPositions.Fixed"
                                                  Size="BootstrapElementSizes.Sm"
                                                  Changed="(e=>OnCellValueChanged(cell))"></BbDatePicker>
                                }
                                else if (editSettings.ControlKind == CellControlKinds.DateTimeInput)
                                {
                                    <BbDatePicker @bind-Value="@cell.DateTimeValue"
                                                  DropdownPosition="DropdownPositions.Fixed"
                                                  Size="BootstrapElementSizes.Sm"
                                                  Changed="(e=>OnCellValueChanged(cell))"></BbDatePicker>
                                }
                                else
                                {
                                    <span style="color:red;">Unknown control</span>
                                }
                            }
                            else
                            {
                                @cell.Text 
                            }
                            
                        </td>
                    }
                    
                  
                }
            </tr>
        }

    </table>

</div>

@if (_isColumnContextMenuOpen)
{
    <BbContextMenu ClientX="@_clientX"
                   ClientY="@_clientY"
                   Items="@_columnMenuItems"
                   Closed="OnColumnMenuClosed">
    </BbContextMenu>
}

@if (_isColumnWidthModalOpen)
{
    <ValueInputModal ClientX="@_clientX" 
                                  ClientY="@_clientY"
                                  Width="150"
                                  Value="@_currentColumn.WidthValue"
                                  Closed="OnColumnWidthValueModalClosed"
                                  Title="Column width"></ValueInputModal>
}

@if (_isRowContextMenuOpen)
{
    <BbContextMenu ClientX="@_clientX"
                   ClientY="@_clientY"
                   Items="@_rowMenuItems"
                   Closed="OnRowMenuClosed">
    </BbContextMenu>
}

@if (_isRowHeightModalOpen)
{
    <ValueInputModal ClientX="@_clientX" 
                                  ClientY="@_clientY"
                                  Width="150"
                                  Value="@_currentRow.HeightValue"
                                  Closed="OnRowHeightValueModalClosed"
                                  Title="Row height"></ValueInputModal>
}